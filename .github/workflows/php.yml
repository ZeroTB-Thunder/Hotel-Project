name: PHP Composer

on:
  push:
    branches: [ "main", "develop", "release/*", "feature/*", "hotfix/*" ] 
  pull_request:
    branches: [ "main", "develop", "release/*", "feature/*", "hotfix/*" ]  
permissions:
  contents: read 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  

    - name: Validate composer.json and composer.lock
      run: composer validate --strict 

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor  
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}  
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress  
    - name: Run tests (for feature and hotfix)
      run: |
        vendor/bin/phpunit --configuration phpunit.xml  # Kiểm thử các tính năng và hotfix

    # Deploy lên môi trường dev hoặc staging khi là feature branch
    - name: Deploy to Staging (for feature branches)
      if: startsWith(github.ref, 'refs/heads/feature/')
      run: |
        echo "Deploying to staging environment for feature branch..."
        # Deploy lên môi trường dev, staging hay server thử nghiệm của bạn
        # Thí dụ: Dùng SSH hoặc các công cụ deploy tự động

    # Deploy chỉ khi push lên nhánh main hoặc release/* (deploy vào production)
    - name: Deploy to Production (only from main and release branches)
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
      run: |
        echo "Deploying to production environment..."
        # Các bước deploy lên môi trường production


    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
